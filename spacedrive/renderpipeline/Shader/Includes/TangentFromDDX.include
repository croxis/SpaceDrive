#pragma once


#pragma include "Includes/Structures/VertexOutput.struct"

// Reconstructs the tangent with the deltas of 
// the position and texcoord
void reconstructTanBin(out vec3 tangent, out vec3 binormal) {

    vec3 Q1 = dFdx(vOutput.positionWorld);
    vec3 Q2 = dFdy(vOutput.positionWorld);
    vec2 st1 = dFdx(vOutput.texcoord);
    vec2 st2 = dFdy(vOutput.texcoord);
 
    tangent = normalize(Q1*st2.y - Q2*st1.y);


    // Fix issues when the texture coordinate is wrong, this happens when
    // two adjacent vertices have the same texture coordinate, as the gradient
    // is 0 then. We just assume some hard-coded tangent and binormal then
    if (abs(st1.y) < 0.00001 && abs(st2.y) < 0.00001) {
        tangent = cross(vOutput.normalWorld, vec3(0,1,0));        
    }

    binormal = normalize(cross(tangent, vOutput.normalWorld));



}


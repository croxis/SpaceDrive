#version 440

// Matrices
uniform mat4 p3d_ModelViewProjectionMatrix;
uniform mat4 trans_model_to_world;

// Material properties
in vec4 p3d_Vertex;
in vec3 p3d_Normal;
in vec2 p3d_MultiTexCoord0;

// Outputs
out vec3 normalWorldSpace;
out vec3 positionWorldSpace;
out vec2 texcoord;
out vec4 diffuseColor;

// We get the material info from panda as a struct
struct PandaMaterial {
    vec4 diffuse;
};
uniform PandaMaterial p3d_Material;


void main() {

    // Transform normal to world space
    normalWorldSpace = normalize(trans_model_to_world * vec4(p3d_Normal, 0)).xyz;

    // Transform position to world space
    positionWorldSpace = (trans_model_to_world * p3d_Vertex).xyz;

    // Pass texcoord to fragment shader
    texcoord = p3d_MultiTexCoord0.xy;

    // Also pass diffuse to fragment shader
    diffuseColor = p3d_Material.diffuse;

    // Transform vertex to window space
    gl_Position = p3d_ModelViewProjectionMatrix * p3d_Vertex;
}
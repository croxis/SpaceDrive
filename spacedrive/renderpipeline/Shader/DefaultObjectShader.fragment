#version 440

#include "Includes/VertexOutput.include"

// This is required for the materials
#include "Includes/MaterialPacking.include"

// Input from the vertex shader
in VertexOutput vOutput;

// Textures Samplers
uniform sampler2D p3d_Texture0;
uniform sampler2D p3d_Texture1;
uniform sampler2D p3d_Texture2;
uniform sampler2D p3d_Texture3;


void main() {

    // Create a material to store the properties on
    Material m;

    // vec3 diffuse = texture(p3d_Texture0, vOutput.texcoord).rgb;
    // vec3 detailNormal = texture(p3d_Texture1, vOutput.texcoord).rgb*2.0 - 1.0;

    // vec3 normal = normalize(vOutput.normalWorld + detailNormal*0.9);
    vec3 normal = normalize(vOutput.normalWorld);
    vec3 diffuse = vec3(1.0);
    float specular = 0.5;

    // float specular = texture(p3d_Texture2, vOutput.texcoord).r;

    m.metallic = 0.0;
    m.roughness = 0.2;
    m.specular = specular*0.4;
    m.baseColor = diffuse;
    m.position = vOutput.positionWorld;
    m.normal = normal;

    // Pack material and output to the render targets
    renderMaterial(m);
}
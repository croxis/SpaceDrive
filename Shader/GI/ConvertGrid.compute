#version 430

// This shader converts the irradiance cache to a floating point texture

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(r32i) uniform iimage3D src;
uniform writeonly image3D dest;

void main() {
  ivec3 texelCoords = ivec3(gl_GlobalInvocationID.xyz);

  int data = imageLoad(src, texelCoords).x;


  // Bits:
  // 12 Bit R
  // 10 Bit G 
  // 9 Bit B

  // 0000 0000 0000 0000  0000 0000 0000 0000
  // ?BBB BBBB BBGG GGGG  GGGG RRRR RRRR RRRR 
  // F731 F731 F731 F731  F731 F731 F731 F731

  // int packedColor = resultColorI.r | 
  //                   resultColorI.g << 12 |
  //                   resultColorI.b << 22;


  int r = data & 0xFFF;
  int g = (data >> 12) & 0x3FF;
  int b = (data >> 22) & 0x1FF;

  vec3 rgb = vec3(r / 255.0, g / 255.0, b / 255.0);

  imageStore(dest, texelCoords, vec4(rgb, data == 0 ? 0.0 : 1.0) );



}
#pragma once




const float blurclamp = 3.0;  // max blur amount
const float bias = 0.6; //aperture - bigger values for shallower depth of field
// uniform float focus;  // this value comes from ReadDepth script.
 
vec4 bokehDOF2(vec2 texcoord, sampler2D target)
{

    float aspectratio = float(WINDOW_WIDTH) / float(WINDOW_HEIGHT);
    vec2 aspectcorrect = vec2(1.0, aspectratio);
    // float factor = 1.0;
     
    // vec2 dofblur = vec2 (clamp( factor * bias, -blurclamp, blurclamp ));
    vec2 dofblur = vec2(0.02);

    vec3 factors[41] = vec3[41](
        vec3(0,0,         1.0),
        vec3(0.0,0.4,     1.0),
        vec3(0.15,0.37,   1.0),
        vec3(0.29,0.29,   1.0),
        vec3(-0.37,0.15,  1.0),
        vec3(0.4,0.0,     1.0),
        vec3(0.37,-0.15,  1.0),
        vec3(0.29,-0.29,  1.0),
        vec3(-0.15,-0.37, 1.0),
        vec3(0.0,-0.4,    1.0),
        vec3(-0.15,0.37,  1.0),
        vec3(-0.29,0.29,  1.0),
        vec3(0.37,0.15,   1.0),
        vec3(-0.4,0.0,    1.0),
        vec3(-0.37,-0.15, 1.0),
        vec3(-0.29,-0.29, 1.0),
        vec3(0.15,-0.37,  1.0),

        vec3(0.15,0.37,   0.9),
        vec3(-0.37,0.15,  0.9),
        vec3(0.37,-0.15,  0.9),
        vec3(-0.15,-0.37, 0.9),
        vec3(-0.15,0.37,  0.9),
        vec3(0.37,0.15,   0.9),
        vec3(-0.37,-0.15, 0.9),
        vec3(0.15,-0.37,  0.9),

        vec3(0.29,0.29,   0.7),
        vec3(0.4,0.0,     0.7),
        vec3(0.29,-0.29,  0.7),
        vec3(0.0,-0.4,    0.7),
        vec3(-0.29,0.29,  0.7),
        vec3(-0.4,0.0,    0.7),
        vec3(-0.29,-0.29, 0.7),
        vec3(0.0,0.4,     0.7),

        vec3(0.29,0.29,   0.4),
        vec3(0.4,0.0,     0.4),
        vec3(0.29,-0.29,  0.4),
        vec3(0.0,-0.4,    0.4),
        vec3(-0.29,0.29,  0.4),
        vec3(-0.4,0.0,    0.4),
        vec3(-0.29,-0.29, 0.4),
        vec3(0.0,0.4,     0.4)
    );

    vec4 result = vec4(0.0);

    for (int i = 0; i < 41; i++) {
        vec3 factor = factors[i];
        vec2 offset = factor.xy * aspectcorrect * dofblur * factor.z;
        result += texture(target, texcoord + offset);
    }

    result /= 41.0;
    return result;

    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.0,0.4spectcorrect) * dofblur);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.15,0.37spectcorrect) * dofblur);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.29,0.29spectcorrect) * dofblur);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.37,0.15spectcorrect) * dofblur);    
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.4,0.0spectcorrect) * dofblur);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.37,-0.15spectcorrect) * dofblur);    
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.29,-0.29spectcorrect) * dofblur);    
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.15,-0.37spectcorrect) * dofblur);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.0,-0.4spectcorrect) * dofblur);  
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.15,0.37spectcorrect) * dofblur);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.29,0.29spectcorrect) * dofblur);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.37,0.15spectcorrect) * dofblur); 
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.4,0.0spectcorrect) * dofblur);  
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.37,-0.15spectcorrect) * dofblur);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.29,-0.29spectcorrect) * dofblur);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.15,-0.37spectcorrect) * dofblur);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.15,0.37spectcorrect) * dofblur*0.9);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.37,0.15spectcorrect) * dofblur*0.9);        
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.37,-0.15spectcorrect) * dofblur*0.9);        
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.15,-0.37spectcorrect) * dofblur*0.9);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.15,0.37spectcorrect) * dofblur*0.9);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.37,0.15spectcorrect) * dofblur*0.9);     
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.37,-0.15spectcorrect) * dofblur*0.9);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.15,-0.37spectcorrect) * dofblur*0.9);    
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.29,0.29spectcorrect) * dofblur*0.7);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.4,0.0spectcorrect) * dofblur*0.7);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.29,-0.29spectcorrect) * dofblur*0.7);    
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.0,-0.4spectcorrect) * dofblur*0.7);  
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.29,0.29spectcorrect) * dofblur*0.7);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.4,0.0spectcorrect) * dofblur*0.7);  
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.29,-0.29spectcorrect) * dofblur*0.7);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.0,0.4spectcorrect) * dofblur*0.7);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.29,0.29spectcorrect) * dofblur*0.4);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.4,0.0spectcorrect) * dofblur*0.4);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.29,-0.29spectcorrect) * dofblur*0.4);    
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.0,-0.4spectcorrect) * dofblur*0.4);  
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.29,0.29spectcorrect) * dofblur*0.4);
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.4,0.0spectcorrect) * dofblur*0.4);  
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( -0.29,-0.29spectcorrect) * dofblur*0.4);   
    // col += texture2D(bgl_RenderedTexture, gl_TexCoord[0].xy + (vec2( 0.0,0.4spectcorrect) * dofblur*0.4);   
            
    // result = col/41.0;
    // result.a = 1.0;
}

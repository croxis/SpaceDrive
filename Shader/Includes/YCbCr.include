
const mat3 YCbCrToRGB = mat3(
  1.001, 1.445, -1.292,
  0.001, 0.445, -2.290,
  1.402, -0.713, -0.002
);

vec3 convertFromYCbCr(vec3 ycbcr) {
    vec3 unpackedYCbCr = clamp(vec3(ycbcr.x, 
        (ycbcr.y-0.5) * 8.0,
        (ycbcr.z-0.5) * 8.0), 0.0, 1.0);
    return YCbCrToRGB * unpackedYCbCr;
}

vec3 unpackPackedVec2(vec2 tounpack) {
    return vec3(tounpack.x, 
        fract(tounpack.y) ,
        int(tounpack.y) / 255.0);
}

vec3 unpackDiffuse(vec2 packedDiffuse) {
    return convertFromYCbCr(unpackPackedVec2(packedDiffuse));
}

const mat3 YCbCrToRGB = mat3(
  1.001, 1.445, -1.292,
  0.001, 0.445, -2.290,
  1.402, -0.713, -0.002
);

vec3 convertFromYCbCr(vec3 ycbcr) {
    vec3 unpackedYCbCr = clamp(vec3(ycbcr.x, 
        (ycbcr.y-0.5) * 8.0,
        (ycbcr.z-0.5) * 8.0), 0.0, 1.0);
    return YCbCrToRGB * unpackedYCbCr;
}

vec3 unpackPackedVec2(vec2 tounpack) {
    return vec3(tounpack.x, 
        fract(tounpack.y) ,
        int(tounpack.y) / 255.0);
}

vec3 unpackDiffuse(vec2 packedDiffuse) {
    return convertFromYCbCr(unpackPackedVec2(packedDiffuse));
}
